--  como usar o IS NULLoperador PostgreSQL para verificar se um valor é NULL ou não;
-- No mundo do banco de dados, NULL significa informações ausentes ou não aplicáveis. NULL não é um valor, 
-- portanto, você não pode compará-lo com nenhum outro valor, como números ou strings;
--  A comparação de NULL com um valor sempre resultará em NULL, o que significa um resultado desconhecido;


-- CRIANDO UMA TABELA DE EXEMPLO PARA TRABALAHR;
CREATE TABLE contatos(
    id INT GENERATED BY DEFAULT AS IDENTITY,
    nome VARCHAR(50) NOT NULL,
    sobrenome VARCHAR(50) NOT NULL,
    email VARCHAR(255) NOT NULL,
    telefone VARCHAR(15),
    PRIMARY KEY (id)
);


-- INSERINDO VALORES(REGISTROS NA TABELA CONTATO)
INSERT INTO contatos(nome,sobrenome,email,telefone)
VALUES ('John','Doe','john.doe@example.com',NULL),
    ('Lily','Bush','lily.bush@example.com','(408-234-2764)');
	

-- EXEMPLO 01 QUERO ECONTRAR CONTATOS QUE NÃO POSSUI TELEFONE
SELECT * FROM contatos WHERE telefone = NULL;
-- retorna nada, nenhum valor, nenhuma lista, porque o NULL != NULL, E NULL não pode ser comparado com nenhum valor
-- porque retorna FALSO
-- NULL não e igual a  nenhum valor, nem mesmo a ele mesmo;


-- PARA VERIFICAR SE UM VALOR E NULL OU NÃO USA O IS NULL OPERADOR:
-- SINTAXE:
valor IS NULL -- retorna true se o valor for NULL ou false se não for
-- PARA ENCONTRAR O CONTATO QUE NÃO POSSUI TELEFONE:
SELECT * FROM contatos WHERE telefone IS NULL;


-- PARA VERIFICAR SE UM VALOR NÃO E NULL:
valor IS NOT NULL -- RETORNA TRUE SE O VALOR NÃO FOR NULL FALSE SE O VALOR FOR NULL

-- encontrar contatos que possui telefone
SELECT * FROM contatos WHERE telefone IS NOT NULL;


